language: c

matrix:
  include:
  - os: linux
    env: PLATFORM="linux-gcc" CMakeArgs="" ARCH=x86_64
    compiler: gcc
    arch: amd64
  - os: linux
    env: PLATFORM="linux-clang" CMakeArgs="" ARCH=x86_64
    compiler: clang
    arch: amd64
  - os: linux
    env: PLATFORM="linux-gcc" CMakeArgs="" ARCH=i386
    compiler: gcc
    arch: amd64
  - os: linux
    env: PLATFORM="linux-clang" CMakeArgs="" ARCH=i386
    compiler: clang
    arch: amd64
  - os: osx
    env: PLATFORM="osx-gcc" CMakeArgs=""
    compiler: gcc
  - os: osx
    env: PLATFORM="osx-clang" CMakeArgs=""
    compiler: clang
  - os: linux
    env: PLATFORM="win-mingw-x86" CMakeArgs="-D CMAKE_SYSTEM_NAME=Windows -D CMAKE_C_COMPILER=x86_64-w64-mingw32-gcc-posix -D CMAKE_CXX_COMPILER=x86_64-w64-mingw32-g++-posix" ARCH="x86_64"
    compiler: gcc
  - os: linux
    env: PLATFORM="win-mingw-x64" CMakeArgs="-D CMAKE_SYSTEM_NAME=Windows -D CMAKE_C_COMPILER=i686-w64-mingw32-gcc-posix -D CMAKE_CXX_COMPILER=i686-w64-mingw32-g++-posix" ARCH="i386"
    compiler: gcc

before_install:
  - wget https://www.intra2net.com/en/developer/libftdi/download/libftdi1-1.4.tar.bz2
  - tar -xjf libftdi1-1.4.tar.bz2

install:
  - cd libftdi1-1.4
  - if [ "$TRAVIS_OS_NAME" = "linux" ];
    then
      sudo apt-get update -qq;
      if [ "$ARCH" = "x86_64" ];
      then
        sudo apt-get install -qq libusb-1.0-0-dev;
      elif [ "$ARCH" = "i386" ];
      then
        sudo apt-get install -qq gcc-multilib libusb-1.0-0-dev:i386 pkg-config:i386;
        export CFLAGS="-m32";
      fi
    fi
  - if [ "$TRAVIS_OS_NAME" = "osx" ];
    then
      brew update;
      brew install libusb;
    fi
  - mkdir build
  - cd build
  - cmake ../
  - make
  - sudo make install
  - cd ../../
  - if [ $TRAVIS_OS_NAME = linux ] && [ -n "$CMakeArgs" ]; then unset CXX; unset CC; sudo apt-get install gcc-mingw-w64-i686 gcc-mingw-w64-x86-64 g++-mingw-w64-i686 g++-mingw-w64-x86-64; fi

script:
  - mkdir build
  - cd build
  - if [ $TRAVIS_OS_NAME = linux ] && [ -n "$CMakeArgs" ];
    then 
      if [ "$ARCH" = "x86_64" ];
      then
        cp -f ../ftd2xx-amd64.lib ../ftd2xx.lib;
        cmake -DCMAKE_TOOLCHAIN_FILE=`pwd`/../cmake/Toolchain-cross-mingw64.cmake ../;
      elif [ "$ARCH" = "i386" ];
      then
        cmake -DCMAKE_TOOLCHAIN_FILE=`pwd`/../cmake/Toolchain-cross-mingw32.cmake ../;
      fi
    elif [ "$TRAVIS_OS_NAME" = "osx" ];
    then
        cmake -DBUILD_STATICLIB=ON ../;
    else
      cmake ../;
    fi
  - make 
  - sudo make install/strip
  - if [ $TRAVIS_OS_NAME = linux ] && [ ! -n "$CMakeArgs" ]; then LD_LIBRARY_PATH=/usr/local/lib /usr/local/bin/fujprog -h; fi
  - if [ $TRAVIS_OS_NAME = osx ]; then /usr/local/bin/fujprog -h; fi

